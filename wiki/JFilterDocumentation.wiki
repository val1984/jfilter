= JFilter Documentation =

Please note that word query and filter is used interchangeably in this document.

== Installation ==
 * Download latest JFilter version from download page.
 * Download Jackson core and mapper jars of version 1.9.0+ from http://wiki.fasterxml.com/JacksonDownload.
 * Add JFilter and Jackson jars in you project class path.

== Sample programs ==
 * [http://code.google.com/p/jfilter/source/browse/trunk/jfilter/src/main/java/gk/jfilter/sample/simple/Simple.java Simple sample]
 * [http://code.google.com/p/jfilter/source/browse/trunk/jfilter/src/main/java/gk/jfilter/sample/product Product sample]
 * [http://code.google.com/p/jfilter/source/browse/trunk/jfilter/src/main/java/gk/jfilter/sample/salesorder Sales order sample]

== How to write json filter ==

 * Class should have getter method for a property that is specified in json filter.
 * java.util.Collection and Map type properties should be parameterized e.g. `Map<String,List<String>>`.

 * Filter can contains non property methods which are non void and has zero arguments, e.g {'toString':'?1'}.

== Supported operators ==

|| *Operator* || *Description* || *Supported types* || *Comment* ||
|| $gt || Greater than|| All || ||
|| $ge || Greater than equals to || All || ||
|| $lt || Less than || All || ||
|| $le || Less than equals to || All || ||
|| $eq || Equals to || All || ||
|| $sw|| Same as String startsWith || String || ||
|| $ew || Same as String endsWith || String || ||
|| $cts || Same as String endsWith || String || ||
|| $in || In || Collection, Array and Map|| ||
|| $nin || Not in || Collection, Array and Map|| ||
|| $and || AND || || used for join||
|| $or || OR || || used for join||

== Supported data types ==
 All primitives, `BigDecimal`, `BigInteger`, Boolean, Byte,  Calendar, Character, java.util.Date, Float, Integer, Long, Short, String, java.sql.Time, java.sql.Timestamp, URI, UUID

== How to use different data types ==

See the code of  [http://code.google.com/p/jfilter/source/browse/trunk/jfilter/src/test/java/gk/jfilter/test/datatype/DataTypesTest.java Data type test program]
== Parameterized filters ==

Parameterized filters are when you do not specify attributes value in json filter string for example {'id':'?id'}. Question mark is used to indicate that value will be given separately. JFilter class provide two method to execute filters one for non parameterized filter and another for executing parameterized filters.
Filter parameters are given in key value form where key is string given in filter in "?string" format and value is object of matching property class of collection bean. $in and $nin values are given as List. 

Example:
{{{
JFilter<SalesOrder> filter = new JFilter<SalesOrder>(orders, SalesOrder.class);
Map<String, Integer> parameters = new HashMap<String, Integer>(1);
parameters.put("id", 10);
Collection<SalesOrder> fc = filter.execute("{ 'id':{'$le':'?id'}}", parameters);
}}}

== Non property method in a filter ==
You can use non property methods in a filter, the method must be non void and should be of zero argument.
Example:
{'toString':'?1'}

== Inherited properties and methods ==
JFilter supports inherited properties and method of any level. That means you can give inherited properties or methods in a filter.
See in the following example getClass() method of Object class is used in a filter.

Example:
 `{'getClass.getName':'eg.MyClass'}` - filter collection where class name is `"eg.MyClass".`